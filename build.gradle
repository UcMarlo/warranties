plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'hire.me'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation platform('org.apache.groovy:groovy-bom:4.0.5')
	testImplementation 'org.apache.groovy:groovy'
	testImplementation platform("org.spockframework:spock-bom:2.4-M1-groovy-4.0")
	testImplementation "org.spockframework:spock-core"
	testImplementation "org.spockframework:spock-spring"
}

tasks.named('test') {
	useJUnitPlatform()
}

jib {
	from {
		image = 'eclipse-temurin:21-jre-alpine'
	}
	to {
		image = "${rootProject.name}:${project.version}"
	}
	container {
		ports = ['8080']
		environment = [
				'DATABASE_URL'            : "",
				'DATABASE_USERNAME'       : "",
				'DATABASE_PASSWORD'       : "",
				'IPGEOLOCATION_ENABLED'   : "false",
				'IPGEOLOCATION_API_KEY'   : "",
				'IPGEOLOCATION_API_URL'   : ""
		]
		jvmFlags = ['-Xms512m', '-Xmx1024m']
		mainClass = 'hire.me.warranties.WarrantiesApplication'
	}
}
